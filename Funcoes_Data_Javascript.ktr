<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>Funcoes_Data_Javascript</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>/</directory>
    <parameters>
    </parameters>
    <log>
      <trans-log-table>
        <connection/>
        <schema/>
        <table/>
        <size_limit_lines/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STATUS</id>
          <enabled>Y</enabled>
          <name>STATUS</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
          <subject/>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
          <subject/>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
          <subject/>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
          <subject/>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
          <subject/>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>STARTDATE</id>
          <enabled>Y</enabled>
          <name>STARTDATE</name>
        </field>
        <field>
          <id>ENDDATE</id>
          <enabled>Y</enabled>
          <name>ENDDATE</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>DEPDATE</id>
          <enabled>Y</enabled>
          <name>DEPDATE</name>
        </field>
        <field>
          <id>REPLAYDATE</id>
          <enabled>Y</enabled>
          <name>REPLAYDATE</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>Y</enabled>
          <name>LOG_FIELD</name>
        </field>
        <field>
          <id>EXECUTING_SERVER</id>
          <enabled>N</enabled>
          <name>EXECUTING_SERVER</name>
        </field>
        <field>
          <id>EXECUTING_USER</id>
          <enabled>N</enabled>
          <name>EXECUTING_USER</name>
        </field>
        <field>
          <id>CLIENT</id>
          <enabled>N</enabled>
          <name>CLIENT</name>
        </field>
      </trans-log-table>
      <perf-log-table>
        <connection/>
        <schema/>
        <table/>
        <interval/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>SEQ_NR</id>
          <enabled>Y</enabled>
          <name>SEQ_NR</name>
        </field>
        <field>
          <id>LOGDATE</id>
          <enabled>Y</enabled>
          <name>LOGDATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>INPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>INPUT_BUFFER_ROWS</name>
        </field>
        <field>
          <id>OUTPUT_BUFFER_ROWS</id>
          <enabled>Y</enabled>
          <name>OUTPUT_BUFFER_ROWS</name>
        </field>
      </perf-log-table>
      <channel-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>LOGGING_OBJECT_TYPE</id>
          <enabled>Y</enabled>
          <name>LOGGING_OBJECT_TYPE</name>
        </field>
        <field>
          <id>OBJECT_NAME</id>
          <enabled>Y</enabled>
          <name>OBJECT_NAME</name>
        </field>
        <field>
          <id>OBJECT_COPY</id>
          <enabled>Y</enabled>
          <name>OBJECT_COPY</name>
        </field>
        <field>
          <id>REPOSITORY_DIRECTORY</id>
          <enabled>Y</enabled>
          <name>REPOSITORY_DIRECTORY</name>
        </field>
        <field>
          <id>FILENAME</id>
          <enabled>Y</enabled>
          <name>FILENAME</name>
        </field>
        <field>
          <id>OBJECT_ID</id>
          <enabled>Y</enabled>
          <name>OBJECT_ID</name>
        </field>
        <field>
          <id>OBJECT_REVISION</id>
          <enabled>Y</enabled>
          <name>OBJECT_REVISION</name>
        </field>
        <field>
          <id>PARENT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>PARENT_CHANNEL_ID</name>
        </field>
        <field>
          <id>ROOT_CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>ROOT_CHANNEL_ID</name>
        </field>
      </channel-log-table>
      <step-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>TRANSNAME</id>
          <enabled>Y</enabled>
          <name>TRANSNAME</name>
        </field>
        <field>
          <id>STEPNAME</id>
          <enabled>Y</enabled>
          <name>STEPNAME</name>
        </field>
        <field>
          <id>STEP_COPY</id>
          <enabled>Y</enabled>
          <name>STEP_COPY</name>
        </field>
        <field>
          <id>LINES_READ</id>
          <enabled>Y</enabled>
          <name>LINES_READ</name>
        </field>
        <field>
          <id>LINES_WRITTEN</id>
          <enabled>Y</enabled>
          <name>LINES_WRITTEN</name>
        </field>
        <field>
          <id>LINES_UPDATED</id>
          <enabled>Y</enabled>
          <name>LINES_UPDATED</name>
        </field>
        <field>
          <id>LINES_INPUT</id>
          <enabled>Y</enabled>
          <name>LINES_INPUT</name>
        </field>
        <field>
          <id>LINES_OUTPUT</id>
          <enabled>Y</enabled>
          <name>LINES_OUTPUT</name>
        </field>
        <field>
          <id>LINES_REJECTED</id>
          <enabled>Y</enabled>
          <name>LINES_REJECTED</name>
        </field>
        <field>
          <id>ERRORS</id>
          <enabled>Y</enabled>
          <name>ERRORS</name>
        </field>
        <field>
          <id>LOG_FIELD</id>
          <enabled>N</enabled>
          <name>LOG_FIELD</name>
        </field>
      </step-log-table>
      <metrics-log-table>
        <connection/>
        <schema/>
        <table/>
        <timeout_days/>
        <field>
          <id>ID_BATCH</id>
          <enabled>Y</enabled>
          <name>ID_BATCH</name>
        </field>
        <field>
          <id>CHANNEL_ID</id>
          <enabled>Y</enabled>
          <name>CHANNEL_ID</name>
        </field>
        <field>
          <id>LOG_DATE</id>
          <enabled>Y</enabled>
          <name>LOG_DATE</name>
        </field>
        <field>
          <id>METRICS_DATE</id>
          <enabled>Y</enabled>
          <name>METRICS_DATE</name>
        </field>
        <field>
          <id>METRICS_CODE</id>
          <enabled>Y</enabled>
          <name>METRICS_CODE</name>
        </field>
        <field>
          <id>METRICS_DESCRIPTION</id>
          <enabled>Y</enabled>
          <name>METRICS_DESCRIPTION</name>
        </field>
        <field>
          <id>METRICS_SUBJECT</id>
          <enabled>Y</enabled>
          <name>METRICS_SUBJECT</name>
        </field>
        <field>
          <id>METRICS_TYPE</id>
          <enabled>Y</enabled>
          <name>METRICS_TYPE</name>
        </field>
        <field>
          <id>METRICS_VALUE</id>
          <enabled>Y</enabled>
          <name>METRICS_VALUE</name>
        </field>
      </metrics-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>N</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
    <created_user>-</created_user>
    <created_date>2024/01/29 21:39:38.642</created_date>
    <modified_user>-</modified_user>
    <modified_date>2024/01/29 21:39:38.642</modified_date>
    <key_for_session_key>H4sIAAAAAAAAAAMAAAAAAAAAAAA=</key_for_session_key>
    <is_key_private>N</is_key_private>
  </info>
  <notepads>
  </notepads>
  <order>
    <hop>
      <from>Delay row</from>
      <to>Formula</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Generate rows</from>
      <to>Add constants</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Add constants</from>
      <to>Delay row</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Formula</from>
      <to>Filter rows</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Filter rows</from>
      <to>Modified JavaScript value</to>
      <enabled>Y</enabled>
    </hop>
    <hop>
      <from>Filter rows</from>
      <to>Write to log</to>
      <enabled>Y</enabled>
    </hop>
  </order>
  <step>
    <name>Add constants</name>
    <type>Constant</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>date</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>2024-01-30</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
      <field>
        <name>mask</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>yyyy-MM-dd</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>688</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Delay row</name>
    <type>Delay</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <timeout>10</timeout>
    <scaletime>seconds</scaletime>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>880</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Filter rows</name>
    <type>FilterRows</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <send_true_to>Modified JavaScript value</send_true_to>
    <send_false_to>Write to log</send_false_to>
    <compare>
      <condition>
        <negated>N</negated>
        <leftvalue>teste</leftvalue>
        <function>=</function>
        <rightvalue/>
        <value>
          <name>constant</name>
          <type>String</type>
          <text>200</text>
          <length>-1</length>
          <precision>-1</precision>
          <isnull>N</isnull>
          <mask/>
        </value>
      </condition>
    </compare>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Formula</name>
    <type>Formula</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <formula>
      <field_name>teste</field_name>
      <formula_string>IF( 1=1;ERROR("Valor Invalido"; "500"); "200")</formula_string>
      <value_type>String</value_type>
      <value_length>-1</value_length>
      <value_precision>-1</value_precision>
      <replace_field/>
    </formula>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1072</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Generate rows</name>
    <type>RowGenerator</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <fields>
      <field>
        <name>row</name>
        <type>Integer</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif>1</nullif>
        <length>-1</length>
        <precision>-1</precision>
        <set_empty_string>N</set_empty_string>
      </field>
    </fields>
    <limit>5</limit>
    <never_ending>N</never_ending>
    <interval_in_ms>5000</interval_in_ms>
    <row_time_field>now</row_time_field>
    <last_time_field>FiveSecondsAgo</last_time_field>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>464</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Modified JavaScript value</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <compatible>Y</compatible>
    <optimizationLevel>9</optimizationLevel>
    <jsScripts>
      <jsScript>
        <jsScript_type>0</jsScript_type>
        <jsScript_name>Funcoes</jsScript_name>
        <jsScript_script>function formatDate(cDate, cMask)
{

	const dia = substr(cDate,8,2);
	const mes = substr(cDate,5,2);
	const ano = substr(cDate,0,4);

	switch(cMask)
	{
		case "dd/MM/yyyy":
		{
			dDate = dia +"/"+ mes + "/" + ano;
			break;
		}
		case "yyyy-MM-dd":
		{
			dDate = ano +"-"+mes+"-"+dia;
			break;
		}
		default:
		{
			dDate = dia +"/"+ mes + "/" + ano;
			break;
		}
	}

	return dDate;
}

function primeiroDiaUtilMes(data) {
    const ano = year(data);
    const mes = month(data);
    var primeiroDia = new Date(ano, mes, 1);

    // verifica se o primeiro dia é sábado ou domingo
    while (primeiroDia.getDay() == 0 || primeiroDia.getDay() == 6) {
        // adiciona um dia
        primeiroDia.setDate(primeiroDia.getDate() + 1);
    }

    return date2str(primeiroDia,"yyyy-MM-dd");
}

function ultimoDiaUtilMes(data) {
    const ano = year(data);
    const mes = month(data);
    var ultimoDia = new Date(ano, mes + 1, 0);

    // verifica se o último dia é sábado ou domingo
    while (ultimoDia.getDay() == 0 || ultimoDia.getDay() == 6) {
        // subtrai um dia
        ultimoDia.setDate(ultimoDia.getDate() - 1);
    }

    return date2str(ultimoDia,"yyyy-MM-dd");
}

function primeiroDiaUtilMesAnterior(data) {
    const ano = year(data);
    const mes = month(data);
    var primeiroDia = new Date(ano, mes, 1);

	primeiroDia = dateAdd(primeiroDia, "m", -1)

    // verifica se o primeiro dia é sábado ou domingo
    while (primeiroDia.getDay() == 0 || primeiroDia.getDay() == 6) {
        // adiciona um dia
        primeiroDia.setDate(primeiroDia.getDate() + 1);
    }

    return date2str(primeiroDia,"yyyy-MM-dd");
}

function ultimoDiaUtilMesAnterior(data) {
    const ano = year(data);
    const mes = month(data);
    var ultimoDia = new Date(ano, mes + 1, 0);

	ultimoDia = dateAdd(ultimoDia, "m", -1)

    // verifica se o último dia é sábado ou domingo
    while (ultimoDia.getDay() == 0 || ultimoDia.getDay() == 6) {
        // subtrai um dia
        ultimoDia.setDate(ultimoDia.getDate() - 1);
    }

    return date2str(ultimoDia,"yyyy-MM-dd");
}

function ProximoDiaUtilData(data) {
    const auxDate = data;
    const day = getDayNumber(auxDate,"w");

    if(day == 5) {
        auxDate.setDate(auxDate.getDate() + 3);
    } else if(day == 6) {
        auxDate.setDate(auxDate.getDate() + 2);
    } else {
        auxDate.setDate(auxDate.getDate() + 1);
    }

    return date2str(auxDate,"yyyy-MM-dd");
}

function DiaUtilData(data) {
    const auxDate = data;
    const day = getDayNumber(auxDate,"w");

    if(day == 0) {
        auxDate.setDate(auxDate.getDate() - 2);
    } else if(day == 6) {
        auxDate.setDate(auxDate.getDate() - 1);
    }

    return date2str(auxDate,"yyyy-MM-dd");
}

function SoNumeros(text)
{
	return getDigitsOnly(text);
}

function SomaDias(data, dias)
{
	const soma = dateAdd(data, "d", dias);
	return date2str(soma,"yyyy-MM-dd");
}

var data = formatDate(date, "yyyy-MM-dd");
var dataPrimeiroDiaUtilMes = primeiroDiaUtilMes(str2date(data, "yyyy-MM-dd"));
var dataUltimoDiaUtilMes = ultimoDiaUtilMes(str2date(data, "yyyy-MM-dd"));
var dataPrimeiroDiaUtilMesAnterior = primeiroDiaUtilMesAnterior(str2date(data, "yyyy-MM-dd"));
var dataUltimoDiaUtilMesAnterior = ultimoDiaUtilMesAnterior(str2date(data, "yyyy-MM-dd"));
var dataProximoDiaUtilData = ProximoDiaUtilData(str2date(data, "yyyy-MM-dd"));
var dataDiaUtilData = DiaUtilData(str2date(data, "yyyy-MM-dd"));
var dataSoma90Dias = SomaDias(str2date(data, "yyyy-MM-dd"), 90);


</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>date2str_Sample</jsScript_name>
        <jsScript_script>// Converts the given Date to a string Value.
//
// Usage:
// date2str(var);
// 1: Date - The Variable with the Date to convert.
// This call uses your localized format.
//
// date2str(var, var);
// 1: Date - The Variable with the Date to convert.
// 2: String - The Format:
//        yy / yyyy - 06 / 2006
//        MM / MMM / MMMMM - 11 / Nov / November
//        d / dd  - 1 / 01
//        E / EEEE - Tue / Tuesday
//        hh / HH - 11 / 23
//        m / mm - 5 / 05
//        s / ss - 8 / 08
//
// date2str(var, var, var);
// 1: Date - The Variable with the Date to convert.
// 2: String - The Format:
// 3: String - The Locale Parameter
//    A valid ISO Language Code. (DE = German, EN = English, FR = France, ...)
//
// date2str(var, var, var, var);
// 1: Date - The Variable with the Date to convert.
// 2: String - The Format:
// 3: String - The Locale Parameter
//    A valid ISO Language Code. (DE = German, EN = English, FR = France, ...)
// 4: String - The Timezone Parameter.
//    A valid timezone: EST, GMT, ... (if invalid GMT will be selected as default)
// 
// 2006-11-15
//
var dValue = new Date();
Alert(date2str(dValue));
Alert(date2str(dValue,"dd.MM.yyyy"));
Alert(date2str(dValue,"dd.MM.yyyy HH:mm:ss"));
Alert(date2str(dValue,"E.MMM.yyyy","DE"));
Alert(date2str(dValue,"dd.MM.yyyy HH:mm:ss","EN"));
Alert(date2str(dValue,"dd.MM.yyyy HH:mm:ss","EN", "EST"));
     </jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>str2date_Sample</jsScript_name>
        <jsScript_script>// Converts the given String to a date Value.
//
// Usage:
// str2date(var);
// 1: String - The Variable with the String to convert.
// This call uses your localized format.
//
// str2date(var, var);
// 1: String - The Variable with the String to convert.
// 2: String - The Format:
//        yy / yyyy - 06 / 2006
//        MM / MMM / MMMMM - 11 / Nov / November
//        d / dd  - 1 / 01
//        E / EEEE - Tue / Tuesday
//        hh / HH - 11 / 23
//        m / mm - 5 / 05
//        s / ss - 8 / 08
//
// str2date(var, var, var);
// 1: String - The Variable with the String to convert.
// 2: String - The Format:
// 3: String - The Locale Parameter
//    An valid ISO Language Code. (DE = German, EN = English, FR = France, ...)
//
// str2date(var, var, var, var);
// 1: String - The Variable with the String to convert.
// 2: String - The Format:
// 3: String - The Locale Parameter
//    An valid ISO Language Code. (DE = German, EN = English, FR = France, ...)
// 4: String - The Timezone Parameter.
//    A valid timezone: EST, GMT, ... (if invalid GMT will be selected as default)
// 
// 2006-11-15
//
Alert(str2date("01.12.2006","dd.MM.yyyy"));
Alert(str2date("01.12.2006 23:23:01","dd.MM.yyyy HH:mm:ss"));
Alert(str2date("Tue.May.2006","E.MMM.yyyy","EN"));
Alert(str2date("22.02.2008 23:23:01","dd.MM.yyyy HH:mm:ss","DE"));
Alert(str2date("22.02.2008 23:23:01","dd.MM.yyyy HH:mm:ss","DE", "EST"));</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>dateAdd_Sample</jsScript_name>
        <jsScript_script>// Add's the given number to  the given date Value.
//
// Usage:
// dateAdd(var,var,var);
// 1: Date - The Variable with the Date.
// 2: String - The Type which represents the value
// to add.
// y - Years
// m - Months
// d - Days
// w - Weeks
// wd - Workingdays
// hh - Hours
// mi - Minutes
// ss - Seconds
// 3: Numeric - The Value to add.
// 
// 2006-11-15
//
var d1 = new Date();
Alert(dateAdd(d1, "y", 1));
Alert(dateAdd(d1, "m", 4));
Alert(dateAdd(d1, "d", 5));
Alert(dateAdd(d1, "wd", 5));</jsScript_script>
      </jsScript>
      <jsScript>
        <jsScript_type>-1</jsScript_type>
        <jsScript_name>getDayNumber_Sample</jsScript_name>
        <jsScript_script>// Returns the number of a date, inside the
// given type.
//
// Usage:
// getDayNumber(var,var);
// 1: Date - The Variable with the Date.
// 2: String - The Type:
// y - Day in Year
// m - Day in Month
// w - Day in Week
// wm - Day of Week in Month 
//
// 2006-11-15
//
var d1 = new Date();
Alert(getDayNumber(d1, "y"));
Alert(getDayNumber(d1, "m"));
Alert(getDayNumber(d1, "w"));
Alert(getDayNumber(d1, "wm"));
      </jsScript_script>
      </jsScript>
    </jsScripts>
    <fields>
      <field>
        <name>data</name>
        <rename>data</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataPrimeiroDiaUtilMes</name>
        <rename>dataPrimeiroDiaUtilMes</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataUltimoDiaUtilMes</name>
        <rename>dataUltimoDiaUtilMes</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataPrimeiroDiaUtilMesAnterior</name>
        <rename>dataPrimeiroDiaUtilMesAnterior</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataUltimoDiaUtilMesAnterior</name>
        <rename>dataUltimoDiaUtilMesAnterior</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataProximoDiaUtilData</name>
        <rename>dataProximoDiaUtilData</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataDiaUtilData</name>
        <rename>dataDiaUtilData</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
      <field>
        <name>dataSoma90Dias</name>
        <rename>dataSoma90Dias</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1776</xloc>
      <yloc>288</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step>
    <name>Write to log</name>
    <type>WriteToLog</type>
    <description/>
    <distribute>Y</distribute>
    <custom_distribution/>
    <copies>1</copies>
    <partitioning>
      <method>none</method>
      <schema_name/>
    </partitioning>
    <loglevel>log_level_basic</loglevel>
    <displayHeader>Y</displayHeader>
    <limitRows>N</limitRows>
    <limitRowsNumber>0</limitRowsNumber>
    <logmessage>Não vamos executar</logmessage>
    <fields>
      <field>
        <name>row</name>
      </field>
      <field>
        <name>date</name>
      </field>
      <field>
        <name>mask</name>
      </field>
      <field>
        <name>teste</name>
      </field>
    </fields>
    <attributes/>
    <cluster_schema/>
    <remotesteps>
      <input>
      </input>
      <output>
      </output>
    </remotesteps>
    <GUI>
      <xloc>1360</xloc>
      <yloc>448</yloc>
      <draw>Y</draw>
    </GUI>
  </step>
  <step_error_handling>
  </step_error_handling>
  <slave-step-copy-partition-distribution>
  </slave-step-copy-partition-distribution>
  <slave_transformation>N</slave_transformation>
  <attributes/>
</transformation>
